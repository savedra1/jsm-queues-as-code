name: Terraform Apply (Merged to main)

on:
  push:
    branches:
      - main
    paths:
      - '**/*.tf'

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: prod
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      TF_VAR_S3_STATE_BUCKET_NAME: ${{ secrets.S3_STATE_BUCKET_NAME }}
      TF_VAR_JIRA_ENDPOINT: ${{ secrets.JIRA_ENDPOINT }}
      TF_VAR_JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
      TF_VAR_JIRA_API_KEY: ${{ secrets.JIRA_API_KEY }}
      TF_VAR_PROJECT_ID: ${{ secrets.PROJECT_ID }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
  
    - name: Run terraform
      run: |
        cd filters
        terraform init -backend-config="bucket=${{ secrets.S3_STATE_BUCKET_NAME }}"
        terraform apply -auto-approve


  # CONFIGURE EXTERNAL FAILURE NOTIFICATION AS NECESSARY
  # Example below using a slack webhook

  #notify-failures:  
  #  runs-on: ubuntu-latest
  #  environment: prod
  #  needs: terraform
  #  if: failure()
  #  steps:
  #  - name: send alert
  #    run: |
  #      curl -X POST -H 'Content-type: application/json' --data '{"text":":\nFailed to update new queue logic. Please check the workflow logs here: <url>"}' ${{ secrets.SLACK_WEBHOOK }}
      
    
  
